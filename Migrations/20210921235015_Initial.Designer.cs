// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(MetricsDbContext))]
    [Migration("20210921235015_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("API.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Page_Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("API.Models.PageSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("End_Time")
                        .HasColumnType("timestamp");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<decimal>("PageLoadTime")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Start_Time")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.HasIndex("SessionId");

                    b.ToTable("PageSession");
                });

            modelBuilder.Entity("API.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Request_Time")
                        .HasColumnType("timestamp");

                    b.Property<bool>("Response")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Request");
                });

            modelBuilder.Entity("API.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("End_Time")
                        .HasColumnType("timestamp");

                    b.Property<DateTimeOffset>("Start_Time")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("API.Models.PageSession", b =>
                {
                    b.HasOne("API.Models.Page", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");

                    b.Navigation("Session");
                });
#pragma warning restore 612, 618
        }
    }
}
